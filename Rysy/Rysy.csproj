<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <OutputType>Exe</OutputType>
    <TargetFramework>net9.0</TargetFramework>
    <ImplicitUsings>enable</ImplicitUsings>
    <Nullable>enable</Nullable>
    <LangVersion>preview</LangVersion>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
    <!--<DebugSymbols>true</DebugSymbols>-->
    <GenerateDocumentationFile>true</GenerateDocumentationFile>

    <FNA Condition="'$(FNA)' == ''">FNA</FNA>
    <SourceCodePlugins Condition="'$(SourceCodePlugins)' == ''">SourceCodePlugins</SourceCodePlugins>
    <DefineConstants Condition="'$(FNA)' != ''">$(DefineConstants);FNA</DefineConstants>
    <DefineConstants Condition="'$(SourceCodePlugins)' != ''">$(DefineConstants);SourceCodePlugins</DefineConstants>

    <!--<IsTrimmable>true</IsTrimmable>-->
  </PropertyGroup>

  <PropertyGroup>
    <AnalysisMode>All</AnalysisMode>
  <!--
    <WarningsAsErrors>$(WarningsAsErrors);CA1307;CA1309;CA1310;CA1305;CA1311</WarningsAsErrors>
  -->
  </PropertyGroup>

  <PropertyGroup Condition="'$(FNA)' != ''">
    <_IsWindows Condition="'$(RuntimeIdentifier)' == 'win-x64'">true</_IsWindows>
    <_IsMacOS Condition="'$(RuntimeIdentifier)' == 'osx'">true</_IsMacOS>
    <_IsLinux Condition="'$(RuntimeIdentifier)' == 'linux-x64'">true</_IsLinux>
    <_AnyOSTargetFound Condition=" '$(_IsWindows)' != '' Or '$(_IsMacOS)' != '' Or '$(_IsLinux)' != '' ">true</_AnyOSTargetFound>
    
    <_IsWindows Condition=" '$(_AnyOSTargetFound)' == '' And '$([System.Runtime.InteropServices.RuntimeInformation]::IsOSPlatform($([System.Runtime.InteropServices.OSPlatform]::Windows)))' == 'true'">true</_IsWindows>
    <_IsMacOS Condition=" '$(_AnyOSTargetFound)' == '' And '$([System.Runtime.InteropServices.RuntimeInformation]::IsOSPlatform($([System.Runtime.InteropServices.OSPlatform]::OSX)))' == 'true'">true</_IsMacOS>
    <_IsLinux Condition=" '$(_AnyOSTargetFound)' == '' And '$([System.Runtime.InteropServices.RuntimeInformation]::IsOSPlatform($([System.Runtime.InteropServices.OSPlatform]::Linux)))' == 'true'">true</_IsLinux>

    <_NativeRuntime Condition=" '$(_NativeRuntime)' == '' And '$(_IsMacOS)' == 'true' And '$(PlatformTarget)' == 'x64'">osx</_NativeRuntime>
    <_NativeRuntime Condition=" '$(_NativeRuntime)' == '' And '$(_IsMacOS)' == 'true' And '$(PlatformTarget)' == 'ARM64'">osx</_NativeRuntime>
    <_NativeRuntime Condition=" '$(_NativeRuntime)' == '' And '$(_IsLinux)' == 'true' And ('$(Prefer32Bit)' == 'false' Or '$(PlatformTarget)' == 'x64')">linux-x64</_NativeRuntime>
    <_NativeRuntime Condition=" '$(_NativeRuntime)' == '' And '$(_IsWindows)' == 'true' And ('$(Prefer32Bit)' == 'false' Or '$(PlatformTarget)' == 'x64')">win-x64</_NativeRuntime>

    <_NativeLibExt Condition="'$(_NativeRuntime)' == 'win-x64'">dll</_NativeLibExt>
    <_NativeLibExt Condition="'$(_NativeRuntime)' == 'osx'">dylib</_NativeLibExt>
    <_NativeLibExt Condition="'$(_NativeRuntime)' == 'linux-x64'">so</_NativeLibExt>
  </PropertyGroup>

  <ItemGroup Condition="'$(FNA)' != ''">
    <Reference Include="FNA">
      <HintPath>lib\FNA.dll</HintPath> <!-- Version of FNA.dll taken from the Everest repo to match in-game FNA -->
    </Reference>
    
    <Content Condition="'$(_NativeRuntime)' != ''" Include="runtimes\$(_NativeRuntime)\native\SDL2.$(_NativeLibExt)">
      <Link>%(Filename)%(Extension)</Link>
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      <Visible>False</Visible>
    </Content>
    <Content Condition="'$(_NativeRuntime)' != ''" Include="runtimes\$(_NativeRuntime)\native\FAudio.$(_NativeLibExt)">
      <Link>%(Filename)%(Extension)</Link>
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      <Visible>False</Visible>
    </Content>
    <Content Condition="'$(_NativeRuntime)' != ''" Include="runtimes\$(_NativeRuntime)\native\FNA3D.$(_NativeLibExt)">
      <Link>%(Filename)%(Extension)</Link>
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      <Visible>False</Visible>
    </Content>
    <Content Condition="'$(_NativeRuntime)' != ''" Include="runtimes\$(_NativeRuntime)\native\libtheorafile.$(_NativeLibExt)">
      <Link>%(Filename)%(Extension)</Link>
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      <Visible>False</Visible>
    </Content>
    
    <!-- 
    Macos, untested
    -->
    <Content Condition="'$(_NativeRuntime)' == 'osx'" Include="runtimes\$(_NativeRuntime)\native\libMoltenVK.$(_NativeLibExt)">
      <Link>%(Filename)%(Extension)</Link>
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      <Visible>False</Visible>
    </Content>
    <Content Condition="'$(_NativeRuntime)' == 'osx'" Include="runtimes\$(_NativeRuntime)\native\libvulkan.1.$(_NativeLibExt)">
      <Link>%(Filename)%(Extension)</Link>
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      <Visible>False</Visible>
    </Content>
  </ItemGroup>
  <ItemGroup Condition="'$(FNA)' == ''">
    <PackageReference Include="MonoGame.Framework.DesktopGL" Version="3.8.1.303" />
  </ItemGroup>
  <PropertyGroup Condition="'$(TargetFramework)' == 'net7.0-windows'">
    <DefineConstants>$(DefineConstants);DirectX</DefineConstants>
  </PropertyGroup>
  
  <PropertyGroup>
    <NoWarn>1701;1702;1591</NoWarn>
  </PropertyGroup>
    
    
  <ItemGroup>
    <PackageReference Include="ImGui.NET" Version="1.91.6.1" />
    <PackageReference Include="JetBrains.Annotations" Version="2023.3.0" />
    <PackageReference Include="KeraLua" Version="1.3.3" />
    <PackageReference Include="Markdig" Version="0.33.0" />
    <PackageReference Include="NativeFileDialogSharp" Version="0.5.0" />
    <PackageReference Include="YamlDotNet" Version="13.0.2" />
  </ItemGroup>

  <ItemGroup Condition="'$(SourceCodePlugins)' != ''">
    <PackageReference Include="Microsoft.CodeAnalysis.CSharp" Version="4.6.0-1.final" />
  </ItemGroup>

  <ItemGroup>
    <None Update="Assets\**">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
  </ItemGroup>

  <ItemGroup>
    <Folder Include="Assets\Graphics\tilesets\subfolder\" />
  </ItemGroup>

</Project>
